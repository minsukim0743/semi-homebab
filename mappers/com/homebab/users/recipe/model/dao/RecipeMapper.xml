<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.homebab.users.recipe.model.dao.RecipeMapper">

  	<resultMap type="com.homebab.users.recipe.model.dto.RecipeDTO" id="recipeResultMap">

  		<id property="rcpIdx" column="RCP_IDX"/>
  		<result property="title" column="TITLE"/>
  		<result property="content" column="CONTENT"/>
  		<result property="regDate" column="REG_DATE"/>
  		<result property="memberIdx" column="MEMBER_IDX"/>
  		<result property="modDate" column="MOD_DATE"/>
  		<result property="viewCnt" column="VIEW_CNT"/>
  		<result property="likeCnt" column="LIKE_CNT"/>
  		<result property="ctgrIdx" column="CTGR_IDX"/>
  		<result property="aprState" column="APR_STATE"/>
  		<result property="stateYn" column="STATE_AN"/>
  		<result property="serving" column="SERVING"/>
  		<result property="cookingTime" column="COOKING_TIME"/>
  		
  		<collection property="ctgrTit" ofType="com.homebab.users.recipe.model.dto.CategoryDTO">
			<result property="ctgrTit" column="CTGR_TIT"/>
		</collection>

  		<collection property="category" ofType="com.homebab.users.recipe.model.dto.CategoryDTO">
	  		<result property="ctgrIdx" column="CTGR_IDX"/>
			<result property="ctgrTit" column="CTGR_TIT"/>
		</collection>

		<collection property="fileList" ofType="com.homebab.users.recipe.model.dto.RecipeFileUploadDTO">
			<result property="fileIdx" column="FILE_IDX"></result>
	  		<result property="orgName" column="ORGNAME"></result>
	  		<result property="changeFileName" column="CHANGE_FILENAME"></result>
	  		<result property="mainPaht" column="MAIN_PATH"></result>
	  		<result property="subPath" column="SUB_PATH"></result>
	  		<result property="rcpIdx" column="RCP_IDX"></result>
		</collection>

		<collection property="nickName" ofType="com.homebab.users.login.model.dto.UsersMngDTO">
			<result property="nickName" column="NICKNAME"/>
		</collection>

  	</resultMap>
  	
  	<resultMap type="com.homebab.users.recipe.model.dto.RecipeFileUploadDTO" id="recipeFileUploadResultMap">

  		<id property="fileIdx" column="FILE_IDX"></id>
  		<result property="orgName" column="ORGNAME"></result>
  		<result property="changeFileName" column="CHANGE_FILENAME"></result>
  		<result property="mainPaht" column="MAIN_PATH"></result>
  		<result property="subPath" column="SUB_PATH"></result>
  		<result property="rcpIdx" column="RCP_IDX"></result>
  	</resultMap>
  	
  	<resultMap type="com.homebab.users.recipe.model.dto.CategoryDTO" id="categoryResultMap">
  		<id property="ctgrIdx" column="CTGR_IDX"></id>
  		<result property="ctgrTit" column="CTGR_TIT"></result>
  	</resultMap>
  	
	<resultMap type="com.homebab.users.login.model.dto.UsersMngDTO" id="userResultMap">
		<id property="memberIdx" column="MEMBER_IDX"/>
		<result property="userId" column="USER_ID"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="name" column="NAME"/>
		<result property="nickName" column="NICKNAME"/>
		<result property="email" column="EMAIL"/>
		<result property="birth" column="BIRTH"/>
		<result property="gender" column="GENDER"/>
		<result property="authNum" column="AUTH_NUM"/>
	</resultMap>
	
	<resultMap type="com.homebab.users.recipe.model.dto.RecipeLikeDTO" id="recipeLikeResultMap">
		<id property="rcpIdx" column="RCP_IDX"/>
		<id property="memberIdx" column="MEMBER_IDX"/>
		<result property="stateYn" column="STATE_YN"/>
	</resultMap>
		
	<resultMap type="com.homebab.users.recipe.model.dto.RecipeCommentsDTO" id="recipeCommentsResultMap">
	  	<id property="cmtIdx" column="CMT_IDX"/>
	  	<result property="cmtContent" column="CMT_CONTENT"/>
	  	<result property="regDate" column="REG_DATE"/>
	  	<result property="memberIdx" column="MEMBER_IDX"/>
	  	<result property="rcpIdx" column="RCP_IDX"/>
	 	<association property="umDTO" resultMap="adminResultMap"/>
	  	<association property="cmtReportDTO" resultMap="cmtReportResultMap"/>
  	</resultMap>

  	<resultMap type="com.homebab.users.member.model.dto.UsersMngDTO" id="adminResultMap">
		<id property="memberIdx" column="MEMBER_IDX"/>
		<result property="nickName" column="NICKNAME"/>
	</resultMap>

	<resultMap type="com.homebab.users.recipe.model.dto.RecipeCmtReportDTO" id="cmtReportResultMap">
		<result property="cmtIdx" column="CMT_IDX"/>
		<result property="stateYn" column="STATE_YN"/>
	</resultMap>


	  	
  	<!-- 레시피 게시글 등록 -->
  	<insert id="insertRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeDTO">
		INSERT
		  INTO RECIPE
		(
		  RCP_IDX, TITLE, CONTENT, MEMBER_IDX
		, REG_DATE, VIEW_CNT, LIKE_CNT, CTGR_IDX
		, APR_STATE, STATE_YN, SERVING, COOKING_TIME	
		)
		VALUES
		(
		  SEQ_RECIPE.NEXTVAL, #{ title }, #{ content }, #{ memberIdx }
		, TO_CHAR(SYSDATE,'YYYY.MM.DD HH24:MI'), 1, 0, #{ ctgrIdx }
		, DEFAULT, 'Y', #{ serving }, #{ cookingTime }	 	
		)
  	</insert>
  	
  	<!-- 레시피 게시글 내 파일 업로드 시 저장 -->
  	<insert id="insertFileUpload">
  		INSERT
  		  INTO RCP_FILEUPLOAD
  		(
  		  FILE_IDX, ORGNAME, CHANGE_FILENAME
  		, MAIN_PATH, SUB_PATH, RCP_IDX  
  		)
  		VALUES
  		(
  		  SEQ_RCP_FILEUPLOAD.NEXTVAL, #{ orgName }, #{ changeFileName }
  		, #{ mainPaht }, #{ subPath }, SEQ_RECIPE.CURRVAL     	
  		)
  	</insert>
  	
  	<!-- 레시피 페이지 전체 리스트 조회 -->
     <select id="selectRecipeList" resultMap="recipeResultMap">
      SELECT  
      		 A.RNUM
           , A.RCP_IDX
           , A.TITLE
           , A.VIEW_CNT
           , A.LIKE_CNT
           , A.CTGR_IDX
           , E.NICKNAME
           , F.SUB_PATH
           , F.RCP_IDX
           , D.CTGR_TIT
        FROM (SELECT ROWNUM RNUM       
                   , B.RCP_IDX
                   , B.TITLE
                   , B.VIEW_CNT
                   , B.LIKE_CNT
                   , B.CTGR_IDX
                   , B.MEMBER_IDX
         FROM (SELECT C.RCP_IDX
                    , C.TITLE
                    , C.VIEW_CNT
                    , C.LIKE_CNT
                    , C.CTGR_IDX
                    , C.MEMBER_IDX
                FROM RECIPE C
               WHERE C.STATE_YN = 'Y'
                  ORDER BY C.RCP_IDX DESC
                )B
                  <![CDATA[
                  WHERE ROWNUM <= #{ endRow }
                  ]]>
          )A
          JOIN CATEGORY D ON (A.CTGR_IDX = D.CTGR_IDX)
          JOIN USERS_MNG E ON(A.MEMBER_IDX = E.MEMBER_IDX)
          JOIN RCP_FILEUPLOAD F ON(A.RCP_IDX = F.RCP_IDX)
         WHERE A.RNUM >= #{ startRow }
         ORDER BY A.RCP_IDX DESC
  	</select>

  	<!-- 레시피 카테고리별 조회 -->
  	<select id="selectRecipeCategory" resultMap="recipeResultMap">
  	 SELECT
  		    A.RCP_IDX
		  , A.TITLE
          , A.VIEW_CNT
          , A.CTGR_IDX
          , A.LIKE_CNT
		  , B.NICKNAME
		  , C.SUB_PATH
		  , C.RCP_IDX
		  , D.CTGR_TIT
	   FROM RECIPE A
	   JOIN USERS_MNG B ON (A.MEMBER_IDX = B.MEMBER_IDX)
	   JOIN RCP_FILEUPLOAD C ON (A.RCP_IDX = C.RCP_IDX)
	   JOIN CATEGORY D ON (A.CTGR_IDX = D.CTGR_IDX)
	  WHERE D.CTGR_TIT = #{ ctgrTit }
	    AND A.STATE_YN = 'Y'
	  ORDER BY A.RCP_IDX DESC
	  </select>

  	<!-- 수정 할 레시피 페이지 게시글 조회 -->
  	<select id="updateSelectRecipe" resultMap="recipeResultMap">
  		SELECT
  		       A.RCP_IDX
  		     , A.TITLE
  		     , A.CONTENT
  		     , A.REG_DATE
  		     , A.MOD_DATE
  		     , A.VIEW_CNT
  		     , A.LIKE_CNT
  		     , A.CTGR_IDX
  		     , B.CTGR_TIT
  		     , A.APR_STATE
  		     , A.STATE_YN
  		     , A.SERVING
  		     , A.COOKING_TIME
  		     , C.SUB_PATH
  		     , D.NICKNAME
  		     , A.MEMBER_IDX
  		 FROM RECIPE A
  		 JOIN CATEGORY B ON (A.CTGR_IDX = B.CTGR_IDX)
  		 JOIN RCP_FILEUPLOAD C ON (A.RCP_IDX = C.RCP_IDX)
  		 JOIN USERS_MNG D ON (A.MEMBER_IDX = D.MEMBER_IDX)
  		WHERE A.RCP_IDX = #{ rcpIdx }
  		  AND A.STATE_YN = 'Y' 
  		ORDER BY A.RCP_IDX DESC       
  	</select>

	  <!-- 조회수 증가 -->
	  <update id="incrementRecipeCount">
	  	 UPDATE
	            RECIPE A
	        SET A.VIEW_CNT = (SELECT B.VIEW_CNT
	                            FROM RECIPE B
	                           WHERE B.RCP_IDX = #{ rcpIdx }
	                          ) + 1
	         WHERE A.RCP_IDX = #{ rcpIdx }
	  </update>

	  <!-- 추천 클릭시 한 계정 중복추천을 방지하기 위하여 추천 테이블에 추가 -->
	  <insert id="likeCountRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeLikeDTO">
	  	INSERT
	  	  INTO RCP_LIKE
	  	(
	  	  RCP_IDX, MEMBER_IDX, STATE_YN	
	  	)  
	  	VALUES
	  	(
	  	  #{ rcpIdx }, #{ memberIdx }, 'Y'
	  	) 	
	  </insert>

	  <!-- 추천 클릭시 추천수 증가 -->
	  <update id="likeCountRecipe2" parameterType="com.homebab.users.recipe.model.dto.RecipeDTO">
	  	UPDATE
	           RECIPE A
	       SET A.LIKE_CNT = (SELECT B.LIKE_CNT
	                           FROM RECIPE B
	                          WHERE B.RCP_IDX = #{ rcpIdx }
	                         ) + 1
	     WHERE A.RCP_IDX = #{ rcpIdx }
	  </update>

	  <!-- 추천 클릭시 추천 테이블 내 정보 삭제 -->
	  <delete id="deleteTableRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeLikeDTO">
	  	DELETE
  	      FROM RCP_LIKE
  	     WHERE RCP_IDX = #{ rcpIdx }
  	  </delete>

	  <!-- 추천 클릭시 추천수 감소 -->
	  <update id="likeCencelRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeLikeDTO">
		  UPDATE
		         RECIPE A
		     SET A.LIKE_CNT = (SELECT B.LIKE_CNT
		                         FROM RECIPE B
		                        WHERE B.RCP_IDX = #{ rcpIdx }
		                       ) - 1
		     WHERE A.RCP_IDX = #{ rcpIdx }
	  </update>

	  <!-- 추천 테이블 조회 -->
	  <select id="selectRecipeLike" resultMap="recipeLikeResultMap">
	  	SELECT
	  	       STATE_YN
	  	  FROM RCP_LIKE
	  	 WHERE MEMBER_IDX = #{ memberIdx }      
	  	   AND RCP_IDX = #{ rcpIdx }
	  </select>
	  
	  <select id="selectRecipeLike2" resultMap="recipeLikeResultMap">
	  	SELECT
	  	       STATE_YN
	  	  FROM RCP_LIKE
	  	 WHERE MEMBER_IDX = #{ memberIdx }      
	  	   AND RCP_IDX = #{ rcpIdx }
	  </select>

	  <!-- 레시피 게시물 상세조회 -->
	  <select id="selectOneRecipeWriting" resultMap="recipeResultMap">
  		SELECT
  		       A.RCP_IDX
  		     , A.TITLE
  		     , A.CONTENT
  		     , A.REG_DATE
  		     , A.MOD_DATE
  		     , A.VIEW_CNT
  		     , A.LIKE_CNT
  		     , A.CTGR_IDX
  		     , B.CTGR_TIT
  		     , A.APR_STATE
  		     , A.STATE_YN
  		     , A.SERVING
  		     , A.COOKING_TIME
  		     , C.SUB_PATH
  		     , D.NICKNAME
  		     , A.MEMBER_IDX
  		     , E.STATE_YN
  		  FROM RECIPE A
  		  JOIN CATEGORY B ON (A.CTGR_IDX = B.CTGR_IDX)
  		  JOIN RCP_FILEUPLOAD C ON (A.RCP_IDX = C.RCP_IDX)
  		  JOIN USERS_MNG D ON (A.MEMBER_IDX = D.MEMBER_IDX)
  		  LEFT JOIN RCP_LIKE E ON (A.MEMBER_IDX = E.MEMBER_IDX) 
  		 WHERE A.RCP_IDX = #{ rcpIdx } 
  		   AND A.STATE_YN = 'Y'
  	</select>

  	<!-- 레시피 파일 삭제 -->
  	<delete id="deleteFile" parameterType="com.homebab.users.recipe.model.dto.RecipeFileUploadDTO">
	  	 DELETE
	  	   FROM RCP_FILEUPLOAD
	  	  WHERE RCP_IDX = #{ rcpIdx }
  	</delete>

  	<!-- 레시피 게시글 삭제 -->
  	<update id="deleteRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeDTO">
	  	 UPDATE
	  	        RECIPE
	  	    SET STATE_YN = 'N'
	  	  WHERE RCP_IDX = #{ rcpIdx }   
  	</update> 

  	<!-- 레시피 게시글 내용 수정 -->  
  	<update id="updateRecipe" parameterType="com.homebab.users.recipe.model.dto.RecipeDTO" >
  		UPDATE
			   RECIPE
		   SET TITLE = #{ title }
		     , CONTENT = #{ content } 
		     , CTGR_IDX = #{ ctgrIdx }
		     , SERVING = #{ serving }
		     , COOKING_TIME = #{ cookingTime }
		     , MOD_DATE = SYSDATE
		 WHERE RCP_IDX = #{ rcpIdx }     	     		

  	</update>

  	<!-- 레시피 게시글 수정 후 파일 저장 -->
  	<insert id="updateInsertFileUpload" parameterType="com.homebab.users.recipe.model.dto.RecipeFileUploadDTO">
  		INSERT
  		  INTO RCP_FILEUPLOAD
  		(
  		  FILE_IDX, ORGNAME, CHANGE_FILENAME
  		, MAIN_PATH, SUB_PATH, RCP_IDX  
  		)
  		VALUES
  		(
  		  SEQ_RCP_FILEUPLOAD.NEXTVAL, #{ orgName }, #{ changeFileName }
  		, #{ mainPaht }, #{ subPath }, #{ rcpIdx }     	
  		)


  	</insert>

	<!-- 레시피 전체 게시물 개수 조회 -->  	
  	<select id="selectTotalCount" resultType="_int" parameterType="hashmap">
        SELECT
               COUNT(*)
          FROM RECIPE A
    	<if test="searchCondition == 'category'">
	      JOIN CATEGORY B ON(A.CTGR_IDX = B.CTGR_IDX)
    	</if>
    	<if test="searchCondition == 'writer'">
	      JOIN USERS_MNG B ON(A.MEMBER_IDX = B.MEMBER_IDX)
    	</if>
    	<where>
			<if test="searchCondition == 'category'">
	           B.CTGR_TIT = #{ searchValue }
			</if>
			<if test="searchCondition == 'writer'">
	           B.NICKNAME LIKE '%' || #{ searchValue } || '%'	
			</if>
			<if test="searchCondition == 'title'">
	           A.TITLE LIKE '%' || #{ searchValue } || '%' 	
			</if>
			<if test="searchCondition == 'content'">
	           A.CONTENT LIKE '%' || #{ searchValue } || '%' 	
			</if>
	       AND A.STATE_YN = 'Y'
    	</where>
    	ORDER BY A.RCP_IDX DESC
	</select>
	
	<!-- 레시피 검색  -->
	<select id="searchRecipe" resultMap="recipeResultMap">
		SELECT
  		       A.RCP_IDX
		     , A.TITLE
             , A.VIEW_CNT
             , A.LIKE_CNT
             , A.CTGR_IDX
		     , B.NICKNAME
		     , C.SUB_PATH
		     , C.RCP_IDX
		     , D.CTGR_TIT
	   FROM RECIPE A
	   JOIN USERS_MNG B ON (A.MEMBER_IDX = B.MEMBER_IDX)
	   JOIN RCP_FILEUPLOAD C ON (A.RCP_IDX = C.RCP_IDX)
	   JOIN CATEGORY D ON (A.CTGR_IDX = D.CTGR_IDX)
	  <where>
	   <if test="type.equals('title')">
	   		A.TITLE LIKE '%'||#{keyword}||'%'
	   </if>
	   <if test="type.equals('writer')">
	   		B.NICKNAME LIKE '%'||#{keyword}||'%'
	   </if>
	   <if test="type.equals('category')">
	   		D.CTGR_TIT LIKE '%'||#{keyword}||'%'
	   </if>
	    AND A.STATE_YN = 'Y'
	  </where>  
	  ORDER BY A.RCP_IDX DESC      
	</select>
	
	<!-- 레시피 게시글 내 댓글 조회 -->
	<select id="recipeCommentsSelect" resultMap="recipeCommentsResultMap">
  	  SELECT   C.RNUM	
  		     , C.CMT_CONTENT
   		     , C.REG_DATE
  	         , C.NICKNAME
  	         , C.MEMBER_IDX
  	         , C.CMT_IDX
  	         , C.STATE_YN
  	 	 FROM (SELECT  ROWNUM RNUM	
		  		     , B.CMT_CONTENT
		   		     , B.REG_DATE
		  	         , B.NICKNAME
		  	         , B.MEMBER_IDX
		  	         , B.CMT_IDX
		  	         , B.STATE_YN
		  	 	 FROM (SELECT
		  			  	      A.CMT_CONTENT
		  				    , A.REG_DATE
		  				    , B.NICKNAME
		  				    , A.MEMBER_IDX
		  				    , A.CMT_IDX
		  				    , E.STATE_YN
			  		    FROM RCP_COMMENTS A
			  		    LEFT JOIN USERS_MNG B ON(A.MEMBER_IDX = B.MEMBER_IDX)
			  		    LEFT JOIN CMT_REPORT E ON(A.CMT_IDX = E.CMT_IDX)
			  		   WHERE A.RCP_IDX = ${ rcpIdx2 }
			  		   ORDER BY A.REG_DATE 
		 		   )B
  	 	   <![CDATA[
  		   WHERE ROWNUM <= #{ selectCriteria.endRow }
  		   ]]> )C
		WHERE C.RNUM >= #{ selectCriteria.startRow } 		   
  	</select>
  	
  	<!-- 댓글 개수  -->
  	<select id="recipeCommentsCount" resultType="_int">
  		SELECT
  			   COUNT(*)
  		  FROM RCP_COMMENTS A
  		  JOIN USERS_MNG B ON(A.MEMBER_IDX = B.MEMBER_IDX)
  		 WHERE A.RCP_IDX = #{ rcpIdx } 	   
  	</select>
	
	<!-- 메인페이지 추천레시피 추천 수 오름차순 -->
	<select id="seleteLikeRecipeList" resultMap="recipeResultMap">
		SELECT
	  	       A.TITLE
	  	     , A.LIKE_CNT
	  	     , A.MEMBER_IDX
	  	     , A.RCP_IDX
	  	     , A.STATE_YN
	  		 , B.MEMBER_IDX
	  		 , C.SUB_PATH
	  		 , C.RCP_IDX
		  FROM RECIPE A
		  JOIN USERS_MNG B ON (A.MEMBER_IDX = B.MEMBER_IDX)
		  JOIN RCP_FILEUPLOAD C ON (A.RCP_IDX = C.RCP_IDX)
		 WHERE A.STATE_YN = 'Y'
		 ORDER BY A.LIKE_CNT DESC 
	</select> 
	
</mapper>
